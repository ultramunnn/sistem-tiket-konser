/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package project_uas;

/**
 *
 * @author munir
 */

import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import java.text.NumberFormat;
import java.util.Locale;

public class formPembelianTiket extends javax.swing.JFrame {

    private ArrayList<Integer> stokTiket; // List untuk stok tiket
    private ArrayList<String> kategoriTiket; // List untuk kategori

    DefaultTableModel tbl; // deklarasi tabel
    DefaultComboBoxModel<String> namaEvent = new DefaultComboBoxModel<>(); // deklarasi nama event

    public formPembelianTiket() {
        initComponents();

        // Inisialisasi stok dan Kategori
        stokTiket = new ArrayList<>();
        kategoriTiket = new ArrayList<>();
        
      
        // Tambahkan stok untuk kategori tiket
        kategoriTiket.add("Regular");
        stokTiket.add(100); // Stok untuk Regular

        kategoriTiket.add("Vip");
        stokTiket.add(50); // Stok untuk Vip

        // Set data ke combo box nama event
        DefaultComboBoxModel<String> kategoriTkt = new DefaultComboBoxModel<>(kategoriTiket.toArray(new String[0]));
        kategori.setModel(kategoriTkt);

        // set data ke combo box nama event
        namaEvent.addElement("PopFest: Cahaya Tahun Baru");
        namaEvent.addElement("Serenade Desember");
        namaevent.setModel(namaEvent);
        
        // **Set default state combo box (tidak ada yang dipilih)**
        namaevent.setSelectedIndex(-1); // Tidak ada yang dipilih untuk nama event
        kategori.setSelectedIndex(-1); // Tidak ada yang dipilih untuk kategori

        // Set tabel model
        tbl = new DefaultTableModel(new Object[] { "NAMA ", "NAMA EVENT", "KATEGORI", "JUMLAH TIKET",
                "PEMBAYARAN", "HARGA TIKET", "TOTAL HARGA" }, 0);
        Tabel.setModel(tbl);

        // Tampilkan stok awal
        regular.setText(String.valueOf(stokTiket.get(0))); // Stok regular
        Vip.setText(String.valueOf(stokTiket.get(1))); // Stok Vip
        
        // **Set total harga awal kosong**
        hargatiket.setText(" ");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pembayaran = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tabel = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        hargatiket = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nama = new javax.swing.JTextField();
        kategori = new javax.swing.JComboBox<>();
        namaevent = new javax.swing.JComboBox<>();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jmltiket = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        Tambah = new javax.swing.JButton();
        edit = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        simpan = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        regular = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Vip = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        totalharga = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setSize(new java.awt.Dimension(1000, 1000));

        jPanel2.setBackground(new java.awt.Color(235, 234, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1000, 1000));

        jLabel1.setFont(new java.awt.Font("MS Gothic", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(61, 59, 243));
        jLabel1.setText("KONSERKU.CO");

        Tabel.setBackground(new java.awt.Color(150, 148, 255));
        Tabel.setFont(new java.awt.Font("Hack", 0, 10)); // NOI18N
        Tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabel);

        jPanel3.setBackground(new java.awt.Color(150, 148, 255));

        hargatiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hargatiketActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(61, 59, 243));
        jLabel2.setText("NAMA          :");

        jLabel7.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(61, 59, 243));
        jLabel7.setText("NAMA EVENT    : ");

        jLabel3.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(61, 59, 243));
        jLabel3.setText("KATEGORI      :");

        jLabel4.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(61, 59, 243));
        jLabel4.setText("JUMLAH TIKET  :");

        jLabel6.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(61, 59, 243));
        jLabel6.setText("PEMBAYARAN    :");

        jLabel5.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(61, 59, 243));
        jLabel5.setText("HARGA TIKET   :");

        nama.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaActionPerformed(evt);
            }
        });

        kategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        kategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kategoriActionPerformed(evt);
            }
        });

        namaevent.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        namaevent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaeventActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Tunai");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Non Tunai");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jmltiket.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmltiketActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nama)
                        .addComponent(kategori, 0, 205, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(hargatiket, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jmltiket, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(namaevent, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(108, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(namaevent, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(kategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jmltiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(hargatiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        jPanel1.setBackground(new java.awt.Color(150, 148, 255));

        Tambah.setBackground(new java.awt.Color(222, 222, 222));
        Tambah.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        Tambah.setForeground(new java.awt.Color(61, 59, 243));
        Tambah.setText("Tambah");
        Tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TambahActionPerformed(evt);
            }
        });

        edit.setBackground(new java.awt.Color(222, 222, 222));
        edit.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        edit.setForeground(new java.awt.Color(61, 59, 243));
        edit.setText("Edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });

        delete.setBackground(new java.awt.Color(222, 222, 222));
        delete.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        delete.setForeground(new java.awt.Color(61, 59, 243));
        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        simpan.setBackground(new java.awt.Color(222, 222, 222));
        simpan.setFont(new java.awt.Font("Hack", 1, 14)); // NOI18N
        simpan.setForeground(new java.awt.Color(61, 59, 243));
        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(edit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Tambah, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addComponent(simpan, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Tambah, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(edit, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(simpan, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jLabel9.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(61, 59, 243));
        jLabel9.setText("VIP");

        regular.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        regular.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        regular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regularActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(61, 59, 243));
        jLabel8.setText("REGULAR");

        Vip.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        Vip.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Vip.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VipActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Hack", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(61, 59, 243));
        jLabel10.setText("TOTAL HARGA");

        totalharga.setFont(new java.awt.Font("Impact", 0, 18)); // NOI18N
        totalharga.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane1)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                                .addComponent(totalharga, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(55, 55, 55)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Vip, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(regular, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(22, 22, 22)
                                                .addComponent(jLabel9))))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(41, 41, 41)
                                        .addComponent(jLabel10)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(regular, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(8, 8, 8)
                        .addComponent(Vip, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(totalharga, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 654, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hargatiketActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_hargatiketActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_hargatiketActionPerformed

    private void jmltiketActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jmltiketActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jmltiketActionPerformed

    private void namaActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_idcardActionPerformed

    }// GEN-LAST:event_idcardActionPerformed
    
    


    private void TambahActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_TambahActionPerformed
        // TODO add your handling code here:
        // Ambil data input dari pengguna
        String id = nama.getText();
        String selectedNamaEvent = (String) namaevent.getSelectedItem();
        String selectedKategori = (String) kategori.getSelectedItem();
        String pembayaran = jCheckBox1.isSelected() ? "Tunai" : jCheckBox2.isSelected() ? "Non Tunai" : "";

        // Validasi nama
        if (id == null || id.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama tidak boleh kosong!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validasi nama event
        if (selectedNamaEvent == null || selectedNamaEvent.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih nama event!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
       

        // Validasi kategori tiket
        if (selectedKategori == null || selectedKategori.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih kategori tiket!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
       

        
        // Validasi jumlah tiket
        int jumlahTiket;
        try {
            jumlahTiket = Integer.parseInt(jmltiket.getText().trim());
            if (jumlahTiket <= 0) {
                JOptionPane.showMessageDialog(this, "Jumlah tiket harus lebih dari 0!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Masukkan jumlah tiket dalam format angka!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Validasi pembayaran
        if (pembayaran.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Silakan pilih pembayaran (Tunai/Non Tunai)!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Cari indeks kategori tiket
        int eventIndex = kategoriTiket.indexOf(selectedKategori);
        if (eventIndex == -1) {
            JOptionPane.showMessageDialog(this, "Kategori tiket tidak ditemukan!", "Kesalahan Input", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Tentukan harga tiket
        int hargaTiket = 0;
        if ("Regular".equals(selectedKategori)) {
            hargaTiket = 100000;
        } else if ("Vip".equals(selectedKategori)) {
            hargaTiket = 150000;
        }

        // Validasi stok tiket
        if (stokTiket.get(eventIndex) >= jumlahTiket) {
            // Kurangi stok
            stokTiket.set(eventIndex, stokTiket.get(eventIndex) - jumlahTiket);

            // Hitung total harga
            int totalHarga = jumlahTiket * hargaTiket;

            // Format harga
            NumberFormat formatter = NumberFormat.getInstance(new Locale("id", "ID"));
            String formattedHarga = formatter.format(totalHarga);

            // Tambahkan data ke tabel
            tbl.addRow(new Object[]{
                id, selectedNamaEvent, selectedKategori, jumlahTiket, pembayaran, hargaTiket, formattedHarga
            });

            // Perbarui stok
            if (eventIndex == 0) {
                regular.setText(String.valueOf(stokTiket.get(eventIndex)));
            } else if (eventIndex == 1) {
                Vip.setText(String.valueOf(stokTiket.get(eventIndex)));
            }

            // Tampilkan total harga di GUI
            totalharga.setText("Rp " + formattedHarga);
        } else {
            JOptionPane.showMessageDialog(this, "Stok tiket tidak mencukupi!", "Kesalahan Stok", JOptionPane.ERROR_MESSAGE);
        }
    

    }

    private void regularActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_stokAActionPerformed
        // TODO add your handling code here:
    }

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox2ActionPerformed
        // TODO add your handling code here:
    }

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
    }
    private void namaeventActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_namaeventActionPerformed

    }

    private void VipActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void kategoriActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String selectedEvent = (String) kategori.getSelectedItem();
        int eventIndex = kategoriTiket.indexOf(selectedEvent);

        // Set harga tiket berdasarkan event
        int hargaTiket = (eventIndex == 0) ? 100000 : 150000;
        hargatiket.setText(String.valueOf(hargaTiket));

    }

    private void editActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
       int selectedRow = Tabel.getSelectedRow();
    if (selectedRow != -1) {
        DefaultTableModel tbl = (DefaultTableModel) Tabel.getModel();

        // Ambil data dari tabel
        String id = tbl.getValueAt(selectedRow, 0).toString();
        String event = tbl.getValueAt(selectedRow, 1).toString();
        String kategoriTiket = tbl.getValueAt(selectedRow, 2).toString(); // Mengambil kategori tiket
        int jumlahTiket = Integer.parseInt(tbl.getValueAt(selectedRow, 3).toString()); // Tidak perlu pengecekan karena pasti angka
        String pembayaran = tbl.getValueAt(selectedRow, 4).toString();
        int hargaTiket = Integer.parseInt(tbl.getValueAt(selectedRow, 5).toString());

        // Tampilkan data di komponen GUI
        nama.setText(id);
        namaevent.setSelectedItem(event); // ComboBox
        kategori.setSelectedItem(kategoriTiket); // ComboBox
        jmltiket.setText(String.valueOf(jumlahTiket));
        jCheckBox1.setSelected(pembayaran.equals("Tunai"));
        jCheckBox2.setSelected(pembayaran.equals("Non Tunai"));
        hargatiket.setText(String.valueOf(hargaTiket));

        // Beri pesan bahwa data sudah dimuat untuk diedit
        JOptionPane.showMessageDialog(this, "Data telah dimuat, silakan lakukan pengeditan.");
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin diedit!");
    }

    }

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        int selectedRow = Tabel.getSelectedRow();
        if (selectedRow != -1) {
            // Ambil data dari tabel
            String kategori = tbl.getValueAt(selectedRow, 2).toString();
            int jumlahTiket = Integer.parseInt(tbl.getValueAt(selectedRow, 3).toString());

            // Kembalikan tiket ke stok
            int eventIndex = kategoriTiket.indexOf(kategori);
            stokTiket.set(eventIndex, stokTiket.get(eventIndex) + jumlahTiket);
            if (eventIndex == 0) {
                regular.setText(String.valueOf(stokTiket.get(eventIndex)));
            } else if (eventIndex == 1) {
                Vip.setText(String.valueOf(stokTiket.get(eventIndex)));
            }
            // Hapus baris dari tabel
            tbl.removeRow(selectedRow);
            JOptionPane.showMessageDialog(this, "Data berhasil dihapus!");
        } else {
            JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus!");
        }
    }

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {
      // TODO add your handling code here:
    int selectedRow = Tabel.getSelectedRow();
    if (selectedRow != -1) {
        DefaultTableModel tbl = (DefaultTableModel) Tabel.getModel();

        // Ambil data lama dari tabel
        String kategoriLama = tbl.getValueAt(selectedRow, 2).toString();
        int jumlahTiketLama = Integer.parseInt(tbl.getValueAt(selectedRow, 3).toString());

        // Ambil data baru dari input
        String idBaru = nama.getText();
        String namaEventBaru = (String) namaevent.getSelectedItem();
        String kategoriBaru = (String) kategori.getSelectedItem();
        int jumlahTiketBaru = Integer.parseInt(jmltiket.getText().trim());
        String pembayaranBaru = jCheckBox1.isSelected() ? "Tunai" : "Non Tunai";
        int hargaTiketBaru = Integer.parseInt(hargatiket.getText().trim());

        // Update stok tiket
        int indexKategoriLama = kategoriTiket.indexOf(kategoriLama);
        int indexKategoriBaru = kategoriTiket.indexOf(kategoriBaru);

        // Kembalikan stok lama
        stokTiket.set(indexKategoriLama, stokTiket.get(indexKategoriLama) + jumlahTiketLama);

        // Kurangi stok baru
        stokTiket.set(indexKategoriBaru, stokTiket.get(indexKategoriBaru) - jumlahTiketBaru);

        // Update stok di GUI
        if (indexKategoriBaru == 0) {
            regular.setText(String.valueOf(stokTiket.get(indexKategoriBaru)));
        } else if (indexKategoriBaru == 1) {
            Vip.setText(String.valueOf(stokTiket.get(indexKategoriBaru)));
        }

        // Hitung total harga baru
        int totalHargaBaru = hargaTiketBaru * jumlahTiketBaru;

        // Format harga
        NumberFormat formatter = NumberFormat.getInstance(new Locale("id", "ID"));
        String formattedHarga = formatter.format(totalHargaBaru);

        // Perbarui data di tabel
        tbl.setValueAt(idBaru, selectedRow, 0);
        tbl.setValueAt(namaEventBaru, selectedRow, 1);
        tbl.setValueAt(kategoriBaru, selectedRow, 2);
        tbl.setValueAt(jumlahTiketBaru, selectedRow, 3);
        tbl.setValueAt(pembayaranBaru, selectedRow, 4);
        tbl.setValueAt(hargaTiketBaru, selectedRow, 5);
        tbl.setValueAt(formattedHarga, selectedRow, 6); // Update kolom total harga
        
        // Tampilkan total harga di GUI
        totalharga.setText("Rp " + formattedHarga);

        // Beri pesan bahwa data berhasil diperbarui
        JOptionPane.showMessageDialog(this, "Data berhasil diperbarui!");
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin disimpan!");
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formPembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formPembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formPembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formPembelianTiket.class.getName()).log(java.util.logging.Level.SEVERE,
                    null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formPembelianTiket().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Tabel;
    private javax.swing.JButton Tambah;
    private javax.swing.JTextField Vip;
    private javax.swing.JButton delete;
    private javax.swing.JButton edit;
    private javax.swing.JTextField hargatiket;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jmltiket;
    private javax.swing.JComboBox<String> kategori;
    private javax.swing.JTextField nama;
    private javax.swing.JComboBox<String> namaevent;
    private javax.swing.ButtonGroup pembayaran;
    private javax.swing.JTextField regular;
    private javax.swing.JButton simpan;
    private javax.swing.JTextField totalharga;
    // End of variables declaration//GEN-END:variables
}
